name: Flutter CI and Release

on:
  push:
    tags:
      - 'v*'  # Trigger only for version tags like v1.0.0

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable

    - run: flutter --version

    - name: Cache Pub Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pub-

    - name: Install dependencies
      run: flutter pub get

    # Build APK
    - name: Build APK
      run: flutter build apk --release

    # Build AAB
    - name: Build AAB
      run: flutter build appbundle --release

    # Create GitHub Release
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    # Upload APK to Release
    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive

    # Upload AAB to Release
    - name: Upload AAB to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/bundle/release/app-release.aab
        asset_name: app-release.aab
        asset_content_type: application/octet-stream

